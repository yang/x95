// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: s9FtU1QqNRpfuTCYMk46sz
// Component: sNe0uqYxcNFT8N
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SectionMobileMenuMainMenuButton from "../../SectionMobileMenuMainMenuButton"; // plasmic-import: n4laxhknGNKwOw/component
import { Accordian } from "../../../../components/accordian"; // plasmic-import: cCgo9xBVwdcOdS/codeComponent
import MobileEcomFeature from "../../MobileEcomFeature"; // plasmic-import: X-5x9z1iG-kBMY/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_sips_by_design_system_css from "../sips_by_design_system/plasmic_sips_by_design_system.module.css"; // plasmic-import: mrgn3VC2r6s7VB3wKPe7xp/projectcss
import projectcss from "./plasmic_copy_of_sips_by_website.module.css"; // plasmic-import: s9FtU1QqNRpfuTCYMk46sz/projectcss
import sty from "./PlasmicNavMobileMenuLnTea.module.css"; // plasmic-import: sNe0uqYxcNFT8N/css

import Icon24Icon from "./icons/PlasmicIcon__Icon24"; // plasmic-import: 3NsZoIk_ipGVNE/icon

export type PlasmicNavMobileMenuLnTea__VariantMembers = {};

export type PlasmicNavMobileMenuLnTea__VariantsArgs = {};
type VariantPropType = keyof PlasmicNavMobileMenuLnTea__VariantsArgs;
export const PlasmicNavMobileMenuLnTea__VariantProps =
  new Array<VariantPropType>();

export type PlasmicNavMobileMenuLnTea__ArgsType = {};
type ArgPropType = keyof PlasmicNavMobileMenuLnTea__ArgsType;
export const PlasmicNavMobileMenuLnTea__ArgProps = new Array<ArgPropType>();

export type PlasmicNavMobileMenuLnTea__OverridesType = {
  root?: p.Flex<"div">;
  sectionMobileMenuMainMenuButton?: p.Flex<
    typeof SectionMobileMenuMainMenuButton
  >;
  collectionsnewTeaArrivals?: p.Flex<"a"> & Partial<LinkProps>;
  collectionstopRatedTeas?: p.Flex<"a"> & Partial<LinkProps>;
  collectionstopRatedTeas2?: p.Flex<"a"> & Partial<LinkProps>;
  collectionssubscribeSave?: p.Flex<"a"> & Partial<LinkProps>;
  collectionssipsByExclusives?: p.Flex<"a"> & Partial<LinkProps>;
  collectionssipsByExclusives2?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsteaGifts?: p.Flex<"a"> & Partial<LinkProps>;
  collectionstea3?: p.Flex<"a"> & Partial<LinkProps>;
  shopAll?: p.Flex<"div">;
  collectionsicedTeaFavorites?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbestLooseLeafTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbestBaggedTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbestCaffeinatedTea?: p.Flex<"a"> & Partial<LinkProps>;
  caffeinated?: p.Flex<"div">;
  collectionscaffeineFree?: p.Flex<"a"> & Partial<LinkProps>;
  collectionstea5?: p.Flex<"a"> & Partial<LinkProps>;
  shopAll3?: p.Flex<"div">;
  collectionsbestEarlGreyTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionschaiShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionschamomileTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionssweetTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbestMintTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionspeachTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsfruityTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsfloralTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionstea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsherbalTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbestBlackTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsgreenTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbestRooibosTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbestOolongTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionshibiscusTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionswhiteTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsyerbaMateTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionstea2?: p.Flex<"a"> & Partial<LinkProps>;
  collectionssleepTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsenergizingTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsstressReliefTeaCollection?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsimmunityTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionshappyTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  mobileEcomFeature?: p.Flex<typeof MobileEcomFeature>;
  cookieTea?: p.Flex<typeof p.PlasmicImg>;
};

export interface DefaultNavMobileMenuLnTeaProps {}

function PlasmicNavMobileMenuLnTea__RenderFunc(props: {
  variants: PlasmicNavMobileMenuLnTea__VariantsArgs;
  args: PlasmicNavMobileMenuLnTea__ArgsType;
  overrides: PlasmicNavMobileMenuLnTea__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_sips_by_design_system_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__hsvX6)}>
            <SectionMobileMenuMainMenuButton
              data-plasmic-name={"sectionMobileMenuMainMenuButton"}
              data-plasmic-override={overrides.sectionMobileMenuMainMenuButton}
              className={classNames(
                "__wab_instance",
                sty.sectionMobileMenuMainMenuButton
              )}
            >
              {"Tea Shop"}
            </SectionMobileMenuMainMenuButton>
          </div>

          {true ? (
            <div
              className={classNames(
                projectcss.all,
                sty.freeBox__hYk4A,
                "" as const
              )}
            >
              <Accordian
                arrow={
                  true ? (
                    <Icon24Icon
                      className={classNames(projectcss.all, sty.svg__zoXth)}
                      role={"img"}
                    />
                  ) : null
                }
                arrowRotationOnOpen={180 as const}
                arrowSide={"farright" as const}
                className={classNames("__wab_instance", sty.accordian__mBdhK)}
                content={
                  true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__wsEm)}
                    >
                      <p.PlasmicLink
                        data-plasmic-name={"collectionsnewTeaArrivals"}
                        data-plasmic-override={
                          overrides.collectionsnewTeaArrivals
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsnewTeaArrivals
                        )}
                        component={Link}
                        href={"/collections/new-tea-arrivals" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5L1O
                          )}
                        >
                          {"New Arrivals"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionstopRatedTeas"}
                        data-plasmic-override={
                          overrides.collectionstopRatedTeas
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionstopRatedTeas
                        )}
                        component={Link}
                        href={"/collections/top-rated-teas" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___9QAp
                          )}
                        >
                          {"Top Rated"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionstopRatedTeas2"}
                        data-plasmic-override={
                          overrides.collectionstopRatedTeas2
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionstopRatedTeas2
                        )}
                        component={Link}
                        href={"/collections/themed-boxes" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6PtpG
                          )}
                        >
                          {"Themed Boxes"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionssubscribeSave"}
                        data-plasmic-override={
                          overrides.collectionssubscribeSave
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionssubscribeSave
                        )}
                        component={Link}
                        href={"/collections/subscribe-save" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7UblM
                          )}
                        >
                          {"Subscribe + Save"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionssipsByExclusives"}
                        data-plasmic-override={
                          overrides.collectionssipsByExclusives
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionssipsByExclusives
                        )}
                        component={Link}
                        href={"/collections/sips-by-exclusives" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sqK1M
                          )}
                        >
                          {"Sips by Exclusives"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionssipsByExclusives2"}
                        data-plasmic-override={
                          overrides.collectionssipsByExclusives2
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionssipsByExclusives2
                        )}
                        component={Link}
                        href={"/collections/monthly-deals" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__x4PiP
                          )}
                        >
                          {"Monthly Deals"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsteaGifts"}
                        data-plasmic-override={overrides.collectionsteaGifts}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsteaGifts
                        )}
                        component={Link}
                        href={"/collections/tea-gifts" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8SuVd
                          )}
                        >
                          {"Tea Gifts"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionstea3"}
                        data-plasmic-override={overrides.collectionstea3}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionstea3
                        )}
                        component={Link}
                        href={"/collections/tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          data-plasmic-name={"shopAll"}
                          data-plasmic-override={overrides.shopAll}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.shopAll
                          )}
                        >
                          {"Shop All"}
                        </div>
                      </p.PlasmicLink>
                    </p.Stack>
                  ) : null
                }
                defaultOpen={true}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eZPjN
                    )}
                  >
                    {"Featured"}
                  </div>
                }
                titleSide={"left" as const}
              />
            </div>
          ) : null}

          {true ? (
            <div
              className={classNames(
                projectcss.all,
                sty.freeBox___15Mfw,
                "" as const
              )}
            >
              <Accordian
                arrow={
                  true ? (
                    <Icon24Icon
                      className={classNames(projectcss.all, sty.svg___5QRn3)}
                      role={"img"}
                    />
                  ) : null
                }
                arrowRotationOnOpen={180 as const}
                arrowSide={"farright" as const}
                className={classNames("__wab_instance", sty.accordian__ibsTk)}
                content={
                  true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__b5TUl)}
                    >
                      <p.PlasmicLink
                        data-plasmic-name={"collectionsicedTeaFavorites"}
                        data-plasmic-override={
                          overrides.collectionsicedTeaFavorites
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsicedTeaFavorites
                        )}
                        component={Link}
                        href={"/collections/iced-tea-favorites" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7WuXy
                          )}
                        >
                          {"Iced Tea"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbestLooseLeafTea"}
                        data-plasmic-override={
                          overrides.collectionsbestLooseLeafTea
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbestLooseLeafTea
                        )}
                        component={Link}
                        href={"/collections/best-loose-leaf-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nmjR6
                          )}
                        >
                          {"Loose Leaf"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbestBaggedTea"}
                        data-plasmic-override={
                          overrides.collectionsbestBaggedTea
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbestBaggedTea
                        )}
                        component={Link}
                        href={"/collections/best-bagged-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__so1Cv
                          )}
                        >
                          {"Bagged Tea"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbestCaffeinatedTea"}
                        data-plasmic-override={
                          overrides.collectionsbestCaffeinatedTea
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbestCaffeinatedTea
                        )}
                        component={Link}
                        href={"/collections/best-caffeinated-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          data-plasmic-name={"caffeinated"}
                          data-plasmic-override={overrides.caffeinated}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.caffeinated
                          )}
                        >
                          {"Caffeinated"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionscaffeineFree"}
                        data-plasmic-override={
                          overrides.collectionscaffeineFree
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionscaffeineFree
                        )}
                        component={Link}
                        href={"/collections/caffeine-free" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__urDHv
                          )}
                        >
                          {"No Caffeine"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionstea5"}
                        data-plasmic-override={overrides.collectionstea5}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionstea5
                        )}
                        component={Link}
                        href={"/collections/tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          data-plasmic-name={"shopAll3"}
                          data-plasmic-override={overrides.shopAll3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.shopAll3
                          )}
                        >
                          {"Shop All"}
                        </div>
                      </p.PlasmicLink>
                    </p.Stack>
                  ) : null
                }
                defaultOpen={true}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lNe0D
                    )}
                  >
                    {"Tea"}
                  </div>
                }
                titleSide={"left" as const}
              />
            </div>
          ) : null}

          {true ? (
            <div
              className={classNames(
                projectcss.all,
                sty.freeBox___9H7Cr,
                "" as const
              )}
            >
              <Accordian
                arrow={
                  true ? (
                    <Icon24Icon
                      className={classNames(projectcss.all, sty.svg__hFBii)}
                      role={"img"}
                    />
                  ) : null
                }
                arrowRotationOnOpen={180 as const}
                arrowSide={"farright" as const}
                className={classNames("__wab_instance", sty.accordian__uRgel)}
                content={
                  true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xhKml)}
                    >
                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbestEarlGreyTea"}
                        data-plasmic-override={
                          overrides.collectionsbestEarlGreyTea
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbestEarlGreyTea
                        )}
                        component={Link}
                        href={"/collections/best-earl-grey-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kxmzm
                          )}
                        >
                          {"Earl Grey"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionschaiShop"}
                        data-plasmic-override={overrides.collectionschaiShop}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionschaiShop
                        )}
                        component={Link}
                        href={"/collections/chai-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gMn3R
                          )}
                        >
                          {"Chai"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionschamomileTeaShop"}
                        data-plasmic-override={
                          overrides.collectionschamomileTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionschamomileTeaShop
                        )}
                        component={Link}
                        href={"/collections/chocolate-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__njrxR
                          )}
                        >
                          {"Chocolate"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionssweetTeaShop"}
                        data-plasmic-override={
                          overrides.collectionssweetTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionssweetTeaShop
                        )}
                        component={Link}
                        href={"/collections/sweet-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2BRdq
                          )}
                        >
                          {"Sweet"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbestMintTeaShop"}
                        data-plasmic-override={
                          overrides.collectionsbestMintTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbestMintTeaShop
                        )}
                        component={Link}
                        href={"/collections/best-mint-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__spjDa
                          )}
                        >
                          {"Mint"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionspeachTeaShop"}
                        data-plasmic-override={
                          overrides.collectionspeachTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionspeachTeaShop
                        )}
                        component={Link}
                        href={"/collections/peach-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aRtw
                          )}
                        >
                          {"Peach"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsfruityTeaShop"}
                        data-plasmic-override={
                          overrides.collectionsfruityTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsfruityTeaShop
                        )}
                        component={Link}
                        href={"/collections/fruity-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__epeXn
                          )}
                        >
                          {"Fruity"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsfloralTeaShop"}
                        data-plasmic-override={
                          overrides.collectionsfloralTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsfloralTeaShop
                        )}
                        component={Link}
                        href={"/collections/floral-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__t5EW5
                          )}
                        >
                          {"Floral"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionstea"}
                        data-plasmic-override={overrides.collectionstea}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionstea
                        )}
                        component={Link}
                        href={"/collections/tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6N0BC
                          )}
                        >
                          {"Shop All"}
                        </div>
                      </p.PlasmicLink>
                    </p.Stack>
                  ) : null
                }
                defaultOpen={false}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6Ve27
                    )}
                  >
                    {"Flavor"}
                  </div>
                }
                titleSide={"left" as const}
              />
            </div>
          ) : null}

          {true ? (
            <div
              className={classNames(
                projectcss.all,
                sty.freeBox__dB7Ou,
                "" as const
              )}
            >
              <Accordian
                arrow={
                  true ? (
                    <Icon24Icon
                      className={classNames(projectcss.all, sty.svg__rYhMc)}
                      role={"img"}
                    />
                  ) : null
                }
                arrowRotationOnOpen={180 as const}
                arrowSide={"farright" as const}
                className={classNames("__wab_instance", sty.accordian___2Wt37)}
                content={
                  true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rhZf)}
                    >
                      <p.PlasmicLink
                        data-plasmic-name={"collectionsherbalTea"}
                        data-plasmic-override={overrides.collectionsherbalTea}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsherbalTea
                        )}
                        component={Link}
                        href={"/collections/herbal-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__s8Gsm
                          )}
                        >
                          {"Herbal"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbestBlackTea"}
                        data-plasmic-override={
                          overrides.collectionsbestBlackTea
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbestBlackTea
                        )}
                        component={Link}
                        href={"/collections/best-black-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__s5Teq
                          )}
                        >
                          {"Black"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsgreenTea"}
                        data-plasmic-override={overrides.collectionsgreenTea}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsgreenTea
                        )}
                        component={Link}
                        href={"/collections/green-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4C1HH
                          )}
                        >
                          {"Green"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbestRooibosTea"}
                        data-plasmic-override={
                          overrides.collectionsbestRooibosTea
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbestRooibosTea
                        )}
                        component={Link}
                        href={"/collections/best-rooibos-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5N71M
                          )}
                        >
                          {"Rooibos"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbestOolongTea"}
                        data-plasmic-override={
                          overrides.collectionsbestOolongTea
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbestOolongTea
                        )}
                        component={Link}
                        href={"/collections/best-oolong-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___84HN
                          )}
                        >
                          {"Oolong"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionshibiscusTea"}
                        data-plasmic-override={overrides.collectionshibiscusTea}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionshibiscusTea
                        )}
                        component={Link}
                        href={"/collections/hibiscus-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__k1SWy
                          )}
                        >
                          {"Hibiscus"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionswhiteTeaShop"}
                        data-plasmic-override={
                          overrides.collectionswhiteTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionswhiteTeaShop
                        )}
                        component={Link}
                        href={"/collections/white-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rtkYk
                          )}
                        >
                          {"White"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsyerbaMateTea"}
                        data-plasmic-override={
                          overrides.collectionsyerbaMateTea
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsyerbaMateTea
                        )}
                        component={Link}
                        href={"/collections/yerba-mate-tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gVL4
                          )}
                        >
                          {"Yerba Mate"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionstea2"}
                        data-plasmic-override={overrides.collectionstea2}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionstea2
                        )}
                        component={Link}
                        href={"/collections/tea" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hu27N
                          )}
                        >
                          {"Shop All"}
                        </div>
                      </p.PlasmicLink>
                    </p.Stack>
                  ) : null
                }
                defaultOpen={false}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fka8O
                    )}
                  >
                    {"Type"}
                  </div>
                }
                titleSide={"left" as const}
              />
            </div>
          ) : null}

          {true ? (
            <div
              className={classNames(
                projectcss.all,
                sty.freeBox__sTwha,
                "" as const
              )}
            >
              <Accordian
                arrow={
                  true ? (
                    <Icon24Icon
                      className={classNames(projectcss.all, sty.svg___39Mx5)}
                      role={"img"}
                    />
                  ) : null
                }
                arrowRotationOnOpen={180 as const}
                arrowSide={"farright" as const}
                className={classNames("__wab_instance", sty.accordian__lxOw)}
                content={
                  true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__jhCGg)}
                    >
                      <p.PlasmicLink
                        data-plasmic-name={"collectionssleepTeaShop"}
                        data-plasmic-override={
                          overrides.collectionssleepTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionssleepTeaShop
                        )}
                        component={Link}
                        href={"/collections/sleep-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gtBwi
                          )}
                        >
                          {"Sleep"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsenergizingTeaShop"}
                        data-plasmic-override={
                          overrides.collectionsenergizingTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsenergizingTeaShop
                        )}
                        component={Link}
                        href={"/collections/energizing-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__evAx3
                          )}
                        >
                          {"Energy"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={
                          "collectionsstressReliefTeaCollection"
                        }
                        data-plasmic-override={
                          overrides.collectionsstressReliefTeaCollection
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsstressReliefTeaCollection
                        )}
                        component={Link}
                        href={
                          "/collections/stress-relief-tea-collection" as const
                        }
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mt4Ys
                          )}
                        >
                          {"Stress Relief"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsimmunityTeaShop"}
                        data-plasmic-override={
                          overrides.collectionsimmunityTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsimmunityTeaShop
                        )}
                        component={Link}
                        href={"/collections/immunity-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__g4K85
                          )}
                        >
                          {"Immunity"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionshappyTeaShop"}
                        data-plasmic-override={
                          overrides.collectionshappyTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionshappyTeaShop
                        )}
                        component={Link}
                        href={"/collections/happy-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__u83Qg
                          )}
                        >
                          {"Mood Boosting"}
                        </div>
                      </p.PlasmicLink>
                    </p.Stack>
                  ) : null
                }
                defaultOpen={false}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tdFt
                    )}
                  >
                    {"Benefit"}
                  </div>
                }
                titleSide={"left" as const}
              />
            </div>
          ) : null}

          <MobileEcomFeature
            data-plasmic-name={"mobileEcomFeature"}
            data-plasmic-override={overrides.mobileEcomFeature}
            className={classNames("__wab_instance", sty.mobileEcomFeature)}
            link={"/collections/sips-by-exclusives" as const}
            slot={
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ogWkM)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sn6Tc
                  )}
                >
                  {"Only at Sips by: premium tea from exclusive brands"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rUrhZ
                  )}
                >
                  {"Shop Now →"}
                </div>
              </p.Stack>
            }
          >
            <p.PlasmicImg
              data-plasmic-name={"cookieTea"}
              data-plasmic-override={overrides.cookieTea}
              alt={"Woman holding box of herbal Cookie Tea" as const}
              className={classNames(sty.cookieTea)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"none" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_sips_by_website/images/almondCookieHerbal4Ad790D5Da5B4B76A0299Bc0B4C21496Webp.webp",
                fullWidth: 1646,
                fullHeight: 1646,
                aspectRatio: undefined
              }}
            />
          </MobileEcomFeature>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionMobileMenuMainMenuButton",
    "collectionsnewTeaArrivals",
    "collectionstopRatedTeas",
    "collectionstopRatedTeas2",
    "collectionssubscribeSave",
    "collectionssipsByExclusives",
    "collectionssipsByExclusives2",
    "collectionsteaGifts",
    "collectionstea3",
    "shopAll",
    "collectionsicedTeaFavorites",
    "collectionsbestLooseLeafTea",
    "collectionsbestBaggedTea",
    "collectionsbestCaffeinatedTea",
    "caffeinated",
    "collectionscaffeineFree",
    "collectionstea5",
    "shopAll3",
    "collectionsbestEarlGreyTea",
    "collectionschaiShop",
    "collectionschamomileTeaShop",
    "collectionssweetTeaShop",
    "collectionsbestMintTeaShop",
    "collectionspeachTeaShop",
    "collectionsfruityTeaShop",
    "collectionsfloralTeaShop",
    "collectionstea",
    "collectionsherbalTea",
    "collectionsbestBlackTea",
    "collectionsgreenTea",
    "collectionsbestRooibosTea",
    "collectionsbestOolongTea",
    "collectionshibiscusTea",
    "collectionswhiteTeaShop",
    "collectionsyerbaMateTea",
    "collectionstea2",
    "collectionssleepTeaShop",
    "collectionsenergizingTeaShop",
    "collectionsstressReliefTeaCollection",
    "collectionsimmunityTeaShop",
    "collectionshappyTeaShop",
    "mobileEcomFeature",
    "cookieTea"
  ],
  sectionMobileMenuMainMenuButton: ["sectionMobileMenuMainMenuButton"],
  collectionsnewTeaArrivals: ["collectionsnewTeaArrivals"],
  collectionstopRatedTeas: ["collectionstopRatedTeas"],
  collectionstopRatedTeas2: ["collectionstopRatedTeas2"],
  collectionssubscribeSave: ["collectionssubscribeSave"],
  collectionssipsByExclusives: ["collectionssipsByExclusives"],
  collectionssipsByExclusives2: ["collectionssipsByExclusives2"],
  collectionsteaGifts: ["collectionsteaGifts"],
  collectionstea3: ["collectionstea3", "shopAll"],
  shopAll: ["shopAll"],
  collectionsicedTeaFavorites: ["collectionsicedTeaFavorites"],
  collectionsbestLooseLeafTea: ["collectionsbestLooseLeafTea"],
  collectionsbestBaggedTea: ["collectionsbestBaggedTea"],
  collectionsbestCaffeinatedTea: [
    "collectionsbestCaffeinatedTea",
    "caffeinated"
  ],
  caffeinated: ["caffeinated"],
  collectionscaffeineFree: ["collectionscaffeineFree"],
  collectionstea5: ["collectionstea5", "shopAll3"],
  shopAll3: ["shopAll3"],
  collectionsbestEarlGreyTea: ["collectionsbestEarlGreyTea"],
  collectionschaiShop: ["collectionschaiShop"],
  collectionschamomileTeaShop: ["collectionschamomileTeaShop"],
  collectionssweetTeaShop: ["collectionssweetTeaShop"],
  collectionsbestMintTeaShop: ["collectionsbestMintTeaShop"],
  collectionspeachTeaShop: ["collectionspeachTeaShop"],
  collectionsfruityTeaShop: ["collectionsfruityTeaShop"],
  collectionsfloralTeaShop: ["collectionsfloralTeaShop"],
  collectionstea: ["collectionstea"],
  collectionsherbalTea: ["collectionsherbalTea"],
  collectionsbestBlackTea: ["collectionsbestBlackTea"],
  collectionsgreenTea: ["collectionsgreenTea"],
  collectionsbestRooibosTea: ["collectionsbestRooibosTea"],
  collectionsbestOolongTea: ["collectionsbestOolongTea"],
  collectionshibiscusTea: ["collectionshibiscusTea"],
  collectionswhiteTeaShop: ["collectionswhiteTeaShop"],
  collectionsyerbaMateTea: ["collectionsyerbaMateTea"],
  collectionstea2: ["collectionstea2"],
  collectionssleepTeaShop: ["collectionssleepTeaShop"],
  collectionsenergizingTeaShop: ["collectionsenergizingTeaShop"],
  collectionsstressReliefTeaCollection: [
    "collectionsstressReliefTeaCollection"
  ],
  collectionsimmunityTeaShop: ["collectionsimmunityTeaShop"],
  collectionshappyTeaShop: ["collectionshappyTeaShop"],
  mobileEcomFeature: ["mobileEcomFeature", "cookieTea"],
  cookieTea: ["cookieTea"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  sectionMobileMenuMainMenuButton: typeof SectionMobileMenuMainMenuButton;
  collectionsnewTeaArrivals: "a";
  collectionstopRatedTeas: "a";
  collectionstopRatedTeas2: "a";
  collectionssubscribeSave: "a";
  collectionssipsByExclusives: "a";
  collectionssipsByExclusives2: "a";
  collectionsteaGifts: "a";
  collectionstea3: "a";
  shopAll: "div";
  collectionsicedTeaFavorites: "a";
  collectionsbestLooseLeafTea: "a";
  collectionsbestBaggedTea: "a";
  collectionsbestCaffeinatedTea: "a";
  caffeinated: "div";
  collectionscaffeineFree: "a";
  collectionstea5: "a";
  shopAll3: "div";
  collectionsbestEarlGreyTea: "a";
  collectionschaiShop: "a";
  collectionschamomileTeaShop: "a";
  collectionssweetTeaShop: "a";
  collectionsbestMintTeaShop: "a";
  collectionspeachTeaShop: "a";
  collectionsfruityTeaShop: "a";
  collectionsfloralTeaShop: "a";
  collectionstea: "a";
  collectionsherbalTea: "a";
  collectionsbestBlackTea: "a";
  collectionsgreenTea: "a";
  collectionsbestRooibosTea: "a";
  collectionsbestOolongTea: "a";
  collectionshibiscusTea: "a";
  collectionswhiteTeaShop: "a";
  collectionsyerbaMateTea: "a";
  collectionstea2: "a";
  collectionssleepTeaShop: "a";
  collectionsenergizingTeaShop: "a";
  collectionsstressReliefTeaCollection: "a";
  collectionsimmunityTeaShop: "a";
  collectionshappyTeaShop: "a";
  mobileEcomFeature: typeof MobileEcomFeature;
  cookieTea: typeof p.PlasmicImg;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNavMobileMenuLnTea__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNavMobileMenuLnTea__VariantsArgs;
    args?: PlasmicNavMobileMenuLnTea__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicNavMobileMenuLnTea__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicNavMobileMenuLnTea__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicNavMobileMenuLnTea__ArgProps,
          internalVariantPropNames: PlasmicNavMobileMenuLnTea__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicNavMobileMenuLnTea__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNavMobileMenuLnTea";
  } else {
    func.displayName = `PlasmicNavMobileMenuLnTea.${nodeName}`;
  }
  return func;
}

export const PlasmicNavMobileMenuLnTea = Object.assign(
  // Top-level PlasmicNavMobileMenuLnTea renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionMobileMenuMainMenuButton: makeNodeComponent(
      "sectionMobileMenuMainMenuButton"
    ),
    collectionsnewTeaArrivals: makeNodeComponent("collectionsnewTeaArrivals"),
    collectionstopRatedTeas: makeNodeComponent("collectionstopRatedTeas"),
    collectionstopRatedTeas2: makeNodeComponent("collectionstopRatedTeas2"),
    collectionssubscribeSave: makeNodeComponent("collectionssubscribeSave"),
    collectionssipsByExclusives: makeNodeComponent(
      "collectionssipsByExclusives"
    ),
    collectionssipsByExclusives2: makeNodeComponent(
      "collectionssipsByExclusives2"
    ),
    collectionsteaGifts: makeNodeComponent("collectionsteaGifts"),
    collectionstea3: makeNodeComponent("collectionstea3"),
    shopAll: makeNodeComponent("shopAll"),
    collectionsicedTeaFavorites: makeNodeComponent(
      "collectionsicedTeaFavorites"
    ),
    collectionsbestLooseLeafTea: makeNodeComponent(
      "collectionsbestLooseLeafTea"
    ),
    collectionsbestBaggedTea: makeNodeComponent("collectionsbestBaggedTea"),
    collectionsbestCaffeinatedTea: makeNodeComponent(
      "collectionsbestCaffeinatedTea"
    ),
    caffeinated: makeNodeComponent("caffeinated"),
    collectionscaffeineFree: makeNodeComponent("collectionscaffeineFree"),
    collectionstea5: makeNodeComponent("collectionstea5"),
    shopAll3: makeNodeComponent("shopAll3"),
    collectionsbestEarlGreyTea: makeNodeComponent("collectionsbestEarlGreyTea"),
    collectionschaiShop: makeNodeComponent("collectionschaiShop"),
    collectionschamomileTeaShop: makeNodeComponent(
      "collectionschamomileTeaShop"
    ),
    collectionssweetTeaShop: makeNodeComponent("collectionssweetTeaShop"),
    collectionsbestMintTeaShop: makeNodeComponent("collectionsbestMintTeaShop"),
    collectionspeachTeaShop: makeNodeComponent("collectionspeachTeaShop"),
    collectionsfruityTeaShop: makeNodeComponent("collectionsfruityTeaShop"),
    collectionsfloralTeaShop: makeNodeComponent("collectionsfloralTeaShop"),
    collectionstea: makeNodeComponent("collectionstea"),
    collectionsherbalTea: makeNodeComponent("collectionsherbalTea"),
    collectionsbestBlackTea: makeNodeComponent("collectionsbestBlackTea"),
    collectionsgreenTea: makeNodeComponent("collectionsgreenTea"),
    collectionsbestRooibosTea: makeNodeComponent("collectionsbestRooibosTea"),
    collectionsbestOolongTea: makeNodeComponent("collectionsbestOolongTea"),
    collectionshibiscusTea: makeNodeComponent("collectionshibiscusTea"),
    collectionswhiteTeaShop: makeNodeComponent("collectionswhiteTeaShop"),
    collectionsyerbaMateTea: makeNodeComponent("collectionsyerbaMateTea"),
    collectionstea2: makeNodeComponent("collectionstea2"),
    collectionssleepTeaShop: makeNodeComponent("collectionssleepTeaShop"),
    collectionsenergizingTeaShop: makeNodeComponent(
      "collectionsenergizingTeaShop"
    ),
    collectionsstressReliefTeaCollection: makeNodeComponent(
      "collectionsstressReliefTeaCollection"
    ),
    collectionsimmunityTeaShop: makeNodeComponent("collectionsimmunityTeaShop"),
    collectionshappyTeaShop: makeNodeComponent("collectionshappyTeaShop"),
    mobileEcomFeature: makeNodeComponent("mobileEcomFeature"),
    cookieTea: makeNodeComponent("cookieTea"),

    // Metadata about props expected for PlasmicNavMobileMenuLnTea
    internalVariantProps: PlasmicNavMobileMenuLnTea__VariantProps,
    internalArgProps: PlasmicNavMobileMenuLnTea__ArgProps
  }
);

export default PlasmicNavMobileMenuLnTea;
/* prettier-ignore-end */
