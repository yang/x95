// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: s9FtU1QqNRpfuTCYMk46sz
// Component: GGmzkm3oxNQLgR
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_sips_by_design_system_css from "../sips_by_design_system/plasmic_sips_by_design_system.module.css"; // plasmic-import: mrgn3VC2r6s7VB3wKPe7xp/projectcss
import projectcss from "./plasmic_copy_of_sips_by_website.module.css"; // plasmic-import: s9FtU1QqNRpfuTCYMk46sz/projectcss
import sty from "./PlasmicSectionFooterSocial.module.css"; // plasmic-import: GGmzkm3oxNQLgR/css

import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: yPISAHV4zfDsCn/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: WiW-GuqFyqoovv/icon
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: aU9qSGmWgUCQJD/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: aI2K1MlU60C51R/icon
import Icon9Icon from "./icons/PlasmicIcon__Icon9"; // plasmic-import: H29D7mrPxL5Fw3/icon

export type PlasmicSectionFooterSocial__VariantMembers = {};

export type PlasmicSectionFooterSocial__VariantsArgs = {};
type VariantPropType = keyof PlasmicSectionFooterSocial__VariantsArgs;
export const PlasmicSectionFooterSocial__VariantProps =
  new Array<VariantPropType>();

export type PlasmicSectionFooterSocial__ArgsType = {};
type ArgPropType = keyof PlasmicSectionFooterSocial__ArgsType;
export const PlasmicSectionFooterSocial__ArgProps = new Array<ArgPropType>();

export type PlasmicSectionFooterSocial__OverridesType = {
  root?: p.Flex<"div">;
  sipsByOnInstagram?: p.Flex<"a"> & Partial<LinkProps>;
  sipsByOnFacebook?: p.Flex<"a"> & Partial<LinkProps>;
  sipsByOnTwitter?: p.Flex<"a"> & Partial<LinkProps>;
  sipsByOnPinterest?: p.Flex<"a"> & Partial<LinkProps>;
  sipsByOnTikTok?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface DefaultSectionFooterSocialProps {
  className?: string;
}

function PlasmicSectionFooterSocial__RenderFunc(props: {
  variants: PlasmicSectionFooterSocial__VariantsArgs;
  args: PlasmicSectionFooterSocial__ArgsType;
  overrides: PlasmicSectionFooterSocial__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  return (
    true ? (
      <p.Stack
        as={"div"}
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        hasGap={true}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_sips_by_design_system_css.plasmic_tokens,
          sty.root
        )}
      >
        <p.PlasmicLink
          data-plasmic-name={"sipsByOnInstagram"}
          data-plasmic-override={overrides.sipsByOnInstagram}
          aria-label={"Sips by on Instagram" as const}
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.sipsByOnInstagram
          )}
          component={Link}
          href={"https://www.instagram.com/sipsby/" as const}
          platform={"nextjs"}
          target={"_blank" as const}
        >
          <Icon5Icon
            className={classNames(projectcss.all, sty.svg__grRoM)}
            role={"img"}
          />
        </p.PlasmicLink>

        <p.PlasmicLink
          data-plasmic-name={"sipsByOnFacebook"}
          data-plasmic-override={overrides.sipsByOnFacebook}
          aria-label={"Sips by on Facebook" as const}
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.sipsByOnFacebook
          )}
          component={Link}
          href={"https://www.facebook.com/sipsby" as const}
          platform={"nextjs"}
          target={"_blank" as const}
        >
          <Icon6Icon
            className={classNames(projectcss.all, sty.svg___4WhoM)}
            role={"img"}
          />
        </p.PlasmicLink>

        <p.PlasmicLink
          data-plasmic-name={"sipsByOnTwitter"}
          data-plasmic-override={overrides.sipsByOnTwitter}
          aria-label={"Sips by on Twitter" as const}
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.sipsByOnTwitter
          )}
          component={Link}
          href={"https://twitter.com/sipsby" as const}
          platform={"nextjs"}
          target={"_blank" as const}
        >
          <Icon7Icon
            className={classNames(projectcss.all, sty.svg__h9Sra)}
            role={"img"}
          />
        </p.PlasmicLink>

        <p.PlasmicLink
          data-plasmic-name={"sipsByOnPinterest"}
          data-plasmic-override={overrides.sipsByOnPinterest}
          aria-label={"Sips by on Pinterest" as const}
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.sipsByOnPinterest
          )}
          component={Link}
          href={"https://www.pinterest.com/sipsby/" as const}
          platform={"nextjs"}
          target={"_blank" as const}
        >
          <Icon8Icon
            className={classNames(projectcss.all, sty.svg___74WhI)}
            role={"img"}
          />
        </p.PlasmicLink>

        <p.PlasmicLink
          data-plasmic-name={"sipsByOnTikTok"}
          data-plasmic-override={overrides.sipsByOnTikTok}
          aria-label={"Sips by on TikTok" as const}
          className={classNames(
            projectcss.all,
            projectcss.a,
            sty.sipsByOnTikTok
          )}
          component={Link}
          href={"https://www.tiktok.com/@sipsby" as const}
          platform={"nextjs"}
          target={"_blank" as const}
        >
          <Icon9Icon
            className={classNames(projectcss.all, sty.svg__oD2Co)}
            role={"img"}
          />
        </p.PlasmicLink>
      </p.Stack>
    ) : null
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sipsByOnInstagram",
    "sipsByOnFacebook",
    "sipsByOnTwitter",
    "sipsByOnPinterest",
    "sipsByOnTikTok"
  ],
  sipsByOnInstagram: ["sipsByOnInstagram"],
  sipsByOnFacebook: ["sipsByOnFacebook"],
  sipsByOnTwitter: ["sipsByOnTwitter"],
  sipsByOnPinterest: ["sipsByOnPinterest"],
  sipsByOnTikTok: ["sipsByOnTikTok"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  sipsByOnInstagram: "a";
  sipsByOnFacebook: "a";
  sipsByOnTwitter: "a";
  sipsByOnPinterest: "a";
  sipsByOnTikTok: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSectionFooterSocial__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSectionFooterSocial__VariantsArgs;
    args?: PlasmicSectionFooterSocial__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicSectionFooterSocial__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicSectionFooterSocial__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicSectionFooterSocial__ArgProps,
          internalVariantPropNames: PlasmicSectionFooterSocial__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicSectionFooterSocial__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSectionFooterSocial";
  } else {
    func.displayName = `PlasmicSectionFooterSocial.${nodeName}`;
  }
  return func;
}

export const PlasmicSectionFooterSocial = Object.assign(
  // Top-level PlasmicSectionFooterSocial renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sipsByOnInstagram: makeNodeComponent("sipsByOnInstagram"),
    sipsByOnFacebook: makeNodeComponent("sipsByOnFacebook"),
    sipsByOnTwitter: makeNodeComponent("sipsByOnTwitter"),
    sipsByOnPinterest: makeNodeComponent("sipsByOnPinterest"),
    sipsByOnTikTok: makeNodeComponent("sipsByOnTikTok"),

    // Metadata about props expected for PlasmicSectionFooterSocial
    internalVariantProps: PlasmicSectionFooterSocial__VariantProps,
    internalArgProps: PlasmicSectionFooterSocial__ArgProps
  }
);

export default PlasmicSectionFooterSocial;
/* prettier-ignore-end */
