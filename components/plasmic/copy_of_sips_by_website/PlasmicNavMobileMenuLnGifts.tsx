// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: s9FtU1QqNRpfuTCYMk46sz
// Component: eZ3dNAICPsOrM2
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SectionMobileMenuMainMenuButton from "../../SectionMobileMenuMainMenuButton"; // plasmic-import: n4laxhknGNKwOw/component
import { Accordian } from "../../../../components/accordian"; // plasmic-import: cCgo9xBVwdcOdS/codeComponent
import MobileEcomFeature from "../../MobileEcomFeature"; // plasmic-import: X-5x9z1iG-kBMY/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_sips_by_design_system_css from "../sips_by_design_system/plasmic_sips_by_design_system.module.css"; // plasmic-import: mrgn3VC2r6s7VB3wKPe7xp/projectcss
import projectcss from "./plasmic_copy_of_sips_by_website.module.css"; // plasmic-import: s9FtU1QqNRpfuTCYMk46sz/projectcss
import sty from "./PlasmicNavMobileMenuLnGifts.module.css"; // plasmic-import: eZ3dNAICPsOrM2/css

import Icon24Icon from "./icons/PlasmicIcon__Icon24"; // plasmic-import: 3NsZoIk_ipGVNE/icon

export type PlasmicNavMobileMenuLnGifts__VariantMembers = {};

export type PlasmicNavMobileMenuLnGifts__VariantsArgs = {};
type VariantPropType = keyof PlasmicNavMobileMenuLnGifts__VariantsArgs;
export const PlasmicNavMobileMenuLnGifts__VariantProps =
  new Array<VariantPropType>();

export type PlasmicNavMobileMenuLnGifts__ArgsType = {};
type ArgPropType = keyof PlasmicNavMobileMenuLnGifts__ArgsType;
export const PlasmicNavMobileMenuLnGifts__ArgProps = new Array<ArgPropType>();

export type PlasmicNavMobileMenuLnGifts__OverridesType = {
  root?: p.Flex<"div">;
  sectionMobileMenuMainMenuButton?: p.Flex<
    typeof SectionMobileMenuMainMenuButton
  >;
  httpsmsipsbycompgift?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbestSellingGifts?: p.Flex<"a"> & Partial<LinkProps>;
  productstheMiniBoxGiftACupOfTea?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsteaGifts?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbirthdayTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsbridalTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  productsappreciationTeaCarePack?: p.Flex<"a"> & Partial<LinkProps>;
  collectionsfeelBetterTeaShop?: p.Flex<"a"> & Partial<LinkProps>;
  productsiLoveYouMoreTeaKit?: p.Flex<"a"> & Partial<LinkProps>;
  mobileEcomFeature?: p.Flex<typeof MobileEcomFeature>;
  img?: p.Flex<typeof p.PlasmicImg>;
};

export interface DefaultNavMobileMenuLnGiftsProps {}

function PlasmicNavMobileMenuLnGifts__RenderFunc(props: {
  variants: PlasmicNavMobileMenuLnGifts__VariantsArgs;
  args: PlasmicNavMobileMenuLnGifts__ArgsType;
  overrides: PlasmicNavMobileMenuLnGifts__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_sips_by_design_system_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox___1VBnV)}>
            <SectionMobileMenuMainMenuButton
              data-plasmic-name={"sectionMobileMenuMainMenuButton"}
              data-plasmic-override={overrides.sectionMobileMenuMainMenuButton}
              className={classNames(
                "__wab_instance",
                sty.sectionMobileMenuMainMenuButton
              )}
            >
              {"Gifts"}
            </SectionMobileMenuMainMenuButton>
          </div>

          {true ? (
            <div
              className={classNames(
                projectcss.all,
                sty.freeBox___7BRSi,
                "" as const
              )}
            >
              <Accordian
                arrow={
                  true ? (
                    <Icon24Icon
                      className={classNames(projectcss.all, sty.svg__anyV)}
                      role={"img"}
                    />
                  ) : null
                }
                arrowRotationOnOpen={180 as const}
                arrowSide={"farright" as const}
                className={classNames("__wab_instance", sty.accordian___9R6Jb)}
                content={
                  true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__nseIb)}
                    >
                      <p.PlasmicLink
                        data-plasmic-name={"httpsmsipsbycompgift"}
                        data-plasmic-override={overrides.httpsmsipsbycompgift}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.httpsmsipsbycompgift
                        )}
                        component={Link}
                        href={
                          "/collections/personalized-favorites/products/gift-the-joy-of-tea-discovery" as const
                        }
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2MYi
                          )}
                        >
                          {"Gift a Subscription"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbestSellingGifts"}
                        data-plasmic-override={
                          overrides.collectionsbestSellingGifts
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbestSellingGifts
                        )}
                        component={Link}
                        href={"/collections/best-selling-gifts" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__quLSm
                          )}
                        >
                          {"Best-Selling Gifts"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"productstheMiniBoxGiftACupOfTea"}
                        data-plasmic-override={
                          overrides.productstheMiniBoxGiftACupOfTea
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.productstheMiniBoxGiftACupOfTea
                        )}
                        component={Link}
                        href={
                          "/products/the-mini-box-gift-a-cup-of-tea" as const
                        }
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__pq7G
                          )}
                        >
                          {"The Mini Box"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsteaGifts"}
                        data-plasmic-override={overrides.collectionsteaGifts}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsteaGifts
                        )}
                        component={Link}
                        href={"/collections/tea-gifts" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__o9ISr
                          )}
                        >
                          {"Shop All"}
                        </div>
                      </p.PlasmicLink>
                    </p.Stack>
                  ) : null
                }
                defaultOpen={true}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aPpBx
                    )}
                  >
                    {"Explore"}
                  </div>
                }
                titleSide={"left" as const}
              />
            </div>
          ) : null}

          {true ? (
            <div
              className={classNames(
                projectcss.all,
                sty.freeBox___1776,
                "" as const
              )}
            >
              <Accordian
                arrow={
                  true ? (
                    <Icon24Icon
                      className={classNames(projectcss.all, sty.svg__pvJa)}
                      role={"img"}
                    />
                  ) : null
                }
                arrowRotationOnOpen={180 as const}
                arrowSide={"farright" as const}
                className={classNames("__wab_instance", sty.accordian__gaOu7)}
                content={
                  true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dbq6V)}
                    >
                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbirthdayTeaShop"}
                        data-plasmic-override={
                          overrides.collectionsbirthdayTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbirthdayTeaShop
                        )}
                        component={Link}
                        href={"/collections/birthday-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eN438
                          )}
                        >
                          {"Birthday Tea"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsbridalTeaShop"}
                        data-plasmic-override={
                          overrides.collectionsbridalTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsbridalTeaShop
                        )}
                        component={Link}
                        href={"/collections/bridal-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gqqe
                          )}
                        >
                          {"Bridal Tea"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"productsappreciationTeaCarePack"}
                        data-plasmic-override={
                          overrides.productsappreciationTeaCarePack
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.productsappreciationTeaCarePack
                        )}
                        component={Link}
                        href={"/products/appreciation-tea-care-pack" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ypG9Z
                          )}
                        >
                          {"Thank You Tea"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"collectionsfeelBetterTeaShop"}
                        data-plasmic-override={
                          overrides.collectionsfeelBetterTeaShop
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.collectionsfeelBetterTeaShop
                        )}
                        component={Link}
                        href={"/collections/feel-better-tea-shop" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0Fggl
                          )}
                        >
                          {"Feel Better Tea"}
                        </div>
                      </p.PlasmicLink>

                      <p.PlasmicLink
                        data-plasmic-name={"productsiLoveYouMoreTeaKit"}
                        data-plasmic-override={
                          overrides.productsiLoveYouMoreTeaKit
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.productsiLoveYouMoreTeaKit
                        )}
                        component={Link}
                        href={"/products/i-love-you-more-tea-kit" as const}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__d9Ya9
                          )}
                        >
                          {"Love Tea"}
                        </div>
                      </p.PlasmicLink>
                    </p.Stack>
                  ) : null
                }
                defaultOpen={false}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rhZo8
                    )}
                  >
                    {"Occasion"}
                  </div>
                }
                titleSide={"left" as const}
              />
            </div>
          ) : null}

          <MobileEcomFeature
            data-plasmic-name={"mobileEcomFeature"}
            data-plasmic-override={overrides.mobileEcomFeature}
            className={classNames("__wab_instance", sty.mobileEcomFeature)}
            link={
              "/collections/personalized-favorites/products/gift-the-joy-of-tea-discovery" as const
            }
            slot={
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___1ZKIc)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__utVmX
                  )}
                >
                  {"Gift the #1 Rated Tea Club"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rm1HR
                  )}
                >
                  {"Shop Now →"}
                </div>
              </p.Stack>
            }
          >
            <p.PlasmicImg
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={"Glass teapot with a crescent moon handle lid" as const}
              className={classNames(sty.img)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"none" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_sips_by_website/images/hAnnakaWinter012179Squarejpg.jpeg",
                fullWidth: 4145,
                fullHeight: 4145,
                aspectRatio: undefined
              }}
            />
          </MobileEcomFeature>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionMobileMenuMainMenuButton",
    "httpsmsipsbycompgift",
    "collectionsbestSellingGifts",
    "productstheMiniBoxGiftACupOfTea",
    "collectionsteaGifts",
    "collectionsbirthdayTeaShop",
    "collectionsbridalTeaShop",
    "productsappreciationTeaCarePack",
    "collectionsfeelBetterTeaShop",
    "productsiLoveYouMoreTeaKit",
    "mobileEcomFeature",
    "img"
  ],
  sectionMobileMenuMainMenuButton: ["sectionMobileMenuMainMenuButton"],
  httpsmsipsbycompgift: ["httpsmsipsbycompgift"],
  collectionsbestSellingGifts: ["collectionsbestSellingGifts"],
  productstheMiniBoxGiftACupOfTea: ["productstheMiniBoxGiftACupOfTea"],
  collectionsteaGifts: ["collectionsteaGifts"],
  collectionsbirthdayTeaShop: ["collectionsbirthdayTeaShop"],
  collectionsbridalTeaShop: ["collectionsbridalTeaShop"],
  productsappreciationTeaCarePack: ["productsappreciationTeaCarePack"],
  collectionsfeelBetterTeaShop: ["collectionsfeelBetterTeaShop"],
  productsiLoveYouMoreTeaKit: ["productsiLoveYouMoreTeaKit"],
  mobileEcomFeature: ["mobileEcomFeature", "img"],
  img: ["img"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  sectionMobileMenuMainMenuButton: typeof SectionMobileMenuMainMenuButton;
  httpsmsipsbycompgift: "a";
  collectionsbestSellingGifts: "a";
  productstheMiniBoxGiftACupOfTea: "a";
  collectionsteaGifts: "a";
  collectionsbirthdayTeaShop: "a";
  collectionsbridalTeaShop: "a";
  productsappreciationTeaCarePack: "a";
  collectionsfeelBetterTeaShop: "a";
  productsiLoveYouMoreTeaKit: "a";
  mobileEcomFeature: typeof MobileEcomFeature;
  img: typeof p.PlasmicImg;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNavMobileMenuLnGifts__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNavMobileMenuLnGifts__VariantsArgs;
    args?: PlasmicNavMobileMenuLnGifts__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicNavMobileMenuLnGifts__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicNavMobileMenuLnGifts__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicNavMobileMenuLnGifts__ArgProps,
          internalVariantPropNames: PlasmicNavMobileMenuLnGifts__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicNavMobileMenuLnGifts__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNavMobileMenuLnGifts";
  } else {
    func.displayName = `PlasmicNavMobileMenuLnGifts.${nodeName}`;
  }
  return func;
}

export const PlasmicNavMobileMenuLnGifts = Object.assign(
  // Top-level PlasmicNavMobileMenuLnGifts renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionMobileMenuMainMenuButton: makeNodeComponent(
      "sectionMobileMenuMainMenuButton"
    ),
    httpsmsipsbycompgift: makeNodeComponent("httpsmsipsbycompgift"),
    collectionsbestSellingGifts: makeNodeComponent(
      "collectionsbestSellingGifts"
    ),
    productstheMiniBoxGiftACupOfTea: makeNodeComponent(
      "productstheMiniBoxGiftACupOfTea"
    ),
    collectionsteaGifts: makeNodeComponent("collectionsteaGifts"),
    collectionsbirthdayTeaShop: makeNodeComponent("collectionsbirthdayTeaShop"),
    collectionsbridalTeaShop: makeNodeComponent("collectionsbridalTeaShop"),
    productsappreciationTeaCarePack: makeNodeComponent(
      "productsappreciationTeaCarePack"
    ),
    collectionsfeelBetterTeaShop: makeNodeComponent(
      "collectionsfeelBetterTeaShop"
    ),
    productsiLoveYouMoreTeaKit: makeNodeComponent("productsiLoveYouMoreTeaKit"),
    mobileEcomFeature: makeNodeComponent("mobileEcomFeature"),
    img: makeNodeComponent("img"),

    // Metadata about props expected for PlasmicNavMobileMenuLnGifts
    internalVariantProps: PlasmicNavMobileMenuLnGifts__VariantProps,
    internalArgProps: PlasmicNavMobileMenuLnGifts__ArgProps
  }
);

export default PlasmicNavMobileMenuLnGifts;
/* prettier-ignore-end */
