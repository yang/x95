// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: s9FtU1QqNRpfuTCYMk46sz
// Component: TdezPZrUvcdxk_
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import PageRow from "../../PageRow"; // plasmic-import: AKAM4dN1Fw/component
import SectionFooterPromo from "../../SectionFooterPromo"; // plasmic-import: 3rtdTNKhjk9lmg/component
import SectionFooterBlogPost from "../../SectionFooterBlogPost"; // plasmic-import: mEp8Jgao0_XIAz/component
import SectionFooterLink from "../../SectionFooterLink"; // plasmic-import: o7UP2anhfPbNrR/component
import Badge from "../../Badge"; // plasmic-import: ITQ8M6Atze/component
import SectionFooterSocial from "../../SectionFooterSocial"; // plasmic-import: GGmzkm3oxNQLgR/component
import SectionFooterNewsletter from "../../SectionFooterNewsletter"; // plasmic-import: DU_qPIKeT28MgM/component

import { useScreenVariants as useScreenVariants_6PiZsruRybCC } from "../sips_by_design_system/PlasmicGlobalVariant__Screen"; // plasmic-import: 6piZsruRybC-C/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_sips_by_design_system_css from "../sips_by_design_system/plasmic_sips_by_design_system.module.css"; // plasmic-import: mrgn3VC2r6s7VB3wKPe7xp/projectcss
import projectcss from "./plasmic_copy_of_sips_by_website.module.css"; // plasmic-import: s9FtU1QqNRpfuTCYMk46sz/projectcss
import sty from "./PlasmicSectionFooter.module.css"; // plasmic-import: TdezPZrUvcdxk_/css

export type PlasmicSectionFooter__VariantMembers = {
  minimal: "minimal";
};

export type PlasmicSectionFooter__VariantsArgs = {
  minimal?: SingleBooleanChoiceArg<"minimal">;
};

type VariantPropType = keyof PlasmicSectionFooter__VariantsArgs;
export const PlasmicSectionFooter__VariantProps = new Array<VariantPropType>(
  "minimal"
);

export type PlasmicSectionFooter__ArgsType = {};
type ArgPropType = keyof PlasmicSectionFooter__ArgsType;
export const PlasmicSectionFooter__ArgProps = new Array<ArgPropType>();

export type PlasmicSectionFooter__OverridesType = {
  root?: p.Flex<"footer">;
  pageRow?: p.Flex<typeof PageRow>;
  blogNav?: p.Flex<"div">;
  blog?: p.Flex<"div">;
  nav?: p.Flex<"div">;
  badge?: p.Flex<typeof Badge>;
  promoNewsletter?: p.Flex<"div">;
  promo?: p.Flex<"div">;
  sectionFooterNewsletter?: p.Flex<typeof SectionFooterNewsletter>;
  socialLinks2?: p.Flex<"div">;
};

export interface DefaultSectionFooterProps {
  minimal?: SingleBooleanChoiceArg<"minimal">;
  className?: string;
}

function PlasmicSectionFooter__RenderFunc(props: {
  variants: PlasmicSectionFooter__VariantsArgs;
  args: PlasmicSectionFooter__ArgsType;
  overrides: PlasmicSectionFooter__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_6PiZsruRybCC()
  });

  return (
    <footer
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_sips_by_design_system_css.plasmic_tokens,
        sty.root,
        { [sty.rootminimal]: hasVariant(variants, "minimal", "minimal") }
      )}
    >
      <PageRow
        data-plasmic-name={"pageRow"}
        data-plasmic-override={overrides.pageRow}
        className={classNames("__wab_instance", sty.pageRow)}
      >
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__kf8Is)}
          >
            {(
              hasVariant(variants, "minimal", "minimal")
                ? true
                : hasVariant(globalVariants, "screen", "desktop")
                ? true
                : hasVariant(globalVariants, "screen", "tabletLandscape")
                ? true
                : true
            ) ? (
              <SectionFooterPromo
                className={classNames(
                  "__wab_instance",
                  sty.sectionFooterPromo__sZfs,
                  {
                    [sty.sectionFooterPromominimal__sZfsCaz7H]: hasVariant(
                      variants,
                      "minimal",
                      "minimal"
                    )
                  }
                )}
              />
            ) : null}

            {true ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"blogNav"}
                data-plasmic-override={overrides.blogNav}
                hasGap={true}
                className={classNames(projectcss.all, sty.blogNav, {
                  [sty.blogNavminimal]: hasVariant(
                    variants,
                    "minimal",
                    "minimal"
                  )
                })}
              >
                {(hasVariant(variants, "minimal", "minimal") ? true : true) ? (
                  <div
                    data-plasmic-name={"blog"}
                    data-plasmic-override={overrides.blog}
                    className={classNames(projectcss.all, sty.blog, {
                      [sty.blogminimal]: hasVariant(
                        variants,
                        "minimal",
                        "minimal"
                      )
                    })}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zC8Ah)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__spNz1
                        )}
                      >
                        {"Steep Society Blog"}
                      </h3>

                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__mw2Bz
                        )}
                        component={Link}
                        href={"/pages/blog" as const}
                        platform={"nextjs"}
                      >
                        {"Learn About Tea"}
                      </p.PlasmicLink>
                    </div>

                    <SectionFooterBlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.sectionFooterBlogPost__ootc
                      )}
                      destination={
                        "/blogs/tealover-101/iced-tea-gifts" as const
                      }
                      slot={"Gift Guides"}
                      slot2={
                        "If you're looking for a warm-weather tea gift, Sips by has the best summer iced teas, teaware and accessories, and tea gift sets for the iced tea lover in your life."
                      }
                      slot3={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__pHj7A
                          )}
                        >
                          {"10 Best Gifts for Iced Tea Lovers"}
                        </div>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        aria-hidden={"true" as const}
                        aria-label={"" as const}
                        className={classNames(sty.img__cpXIe)}
                        displayHeight={"90px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"90px" as const}
                        loading={"lazy" as const}
                        role={"presentation" as const}
                        src={{
                          src: "/plasmic/copy_of_sips_by_website/images/_2022BlogSquares77E540F8Cc3D3641308338C16B270F06Cewebp.webp",
                          fullWidth: 180,
                          fullHeight: 180,
                          aspectRatio: undefined
                        }}
                      />
                    </SectionFooterBlogPost>

                    <SectionFooterBlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.sectionFooterBlogPost__xXjYj
                      )}
                      destination={
                        "/blogs/tealover-101/all-about-lemon-tea" as const
                      }
                      slot={"Tea Lover Lessons"}
                      slot2={
                        "When life gives you lemons, make lemon tea! Learn everything you need to know about the different types of lemon tea, including some surprising health benefits."
                      }
                      slot3={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uV7Sw
                          )}
                        >
                          {"All About Lemon Tea"}
                        </div>
                      }
                    >
                      <p.PlasmicImg
                        alt={""}
                        aria-hidden={"true" as const}
                        className={classNames(sty.img__bqjNf)}
                        displayHeight={"90px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"90px" as const}
                        loading={"lazy" as const}
                        role={"presentation" as const}
                        src={{
                          src: "/plasmic/copy_of_sips_by_website/images/lemonTeapng.png",
                          fullWidth: 1080,
                          fullHeight: 1080,
                          aspectRatio: undefined
                        }}
                      />
                    </SectionFooterBlogPost>
                  </div>
                ) : null}

                <div
                  data-plasmic-name={"nav"}
                  data-plasmic-override={overrides.nav}
                  className={classNames(projectcss.all, sty.nav)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qjsOz)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        sty.h3__ct7Ta
                      )}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__fEb63
                        )}
                        component={Link}
                        href={"/collections/tea" as const}
                        platform={"nextjs"}
                      >
                        {"Tea Shop"}
                      </p.PlasmicLink>
                    </h3>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__oAeWr)}
                    >
                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink___2RV
                        )}
                        destination={
                          "/collections/personalized-favorites" as const
                        }
                      >
                        {"Personalized Favorites"}
                      </SectionFooterLink>

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__lrPco,
                          {
                            [sty.sectionFooterLinkminimal__lrPcocaz7H]:
                              hasVariant(variants, "minimal", "minimal")
                          }
                        )}
                        destination={"/collections/summer-tea-shop" as const}
                      >
                        {"Summer Tea Shop"}
                      </SectionFooterLink>

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__iivgw
                        )}
                        destination={"/collections/tea-gifts" as const}
                      >
                        {"Tea Gifts"}
                      </SectionFooterLink>

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__dH9Ha
                        )}
                        destination={"/collections/tea-shop" as const}
                      >
                        {"Tea Shop"}
                      </SectionFooterLink>

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__whRj2
                        )}
                        destination={"/collections/wellness-tea-shop" as const}
                      >
                        {"Wellness Tea Shop"}
                      </SectionFooterLink>

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink___4FVkt
                        )}
                        destination={
                          "/collections/mugs-and-accessories" as const
                        }
                      >
                        {"Mugs and Accessories"}
                      </SectionFooterLink>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___7UqFg)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        sty.h3__apTtN
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0Cy4L
                        )}
                      >
                        {"About Us"}
                      </div>
                    </h3>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__d9RsH)}
                    >
                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__hXqxO
                        )}
                        destination={"/pages/about" as const}
                      >
                        {"About"}
                      </SectionFooterLink>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vYyU
                          )}
                        >
                          <SectionFooterLink
                            className={classNames(
                              "__wab_instance",
                              sty.sectionFooterLink__mJlYf
                            )}
                            destination={"mailto:careers@sipsby.com" as const}
                            openInNewTab={"_blank" as const}
                          >
                            {"Careers"}
                          </SectionFooterLink>

                          {true ? (
                            <Badge
                              data-plasmic-name={"badge"}
                              data-plasmic-override={overrides.badge}
                              className={classNames(
                                "__wab_instance",
                                sty.badge
                              )}
                              size={"small" as const}
                            >
                              {"We’re Hiring"}
                            </Badge>
                          ) : null}
                        </p.Stack>
                      ) : null}

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__ssn7S
                        )}
                        destination={"/pages/press" as const}
                      >
                        {"Press"}
                      </SectionFooterLink>
                    </p.Stack>

                    {(
                      hasVariant(globalVariants, "screen", "tabletPortrait")
                        ? true
                        : true
                    ) ? (
                      <SectionFooterSocial
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterSocial__l8Vv8
                        )}
                      />
                    ) : null}
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__eOyvD)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        sty.h3__mOpjE
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mmZxd
                        )}
                      >
                        {"Support"}
                      </div>
                    </h3>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7Rt3E
                      )}
                    >
                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__aw7Bz
                        )}
                        destination={"/pages/mygift" as const}
                      >
                        {"Redeem a Gift Card"}
                      </SectionFooterLink>

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__wpfEg
                        )}
                        destination={"/pages/contact" as const}
                      >
                        {"Contact Us"}
                      </SectionFooterLink>

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__zIhuz
                        )}
                        destination={
                          "https://sipsby.zendesk.com/hc/en-us" as const
                        }
                        openInNewTab={"_blank" as const}
                      >
                        {"Frequently Asked Questions"}
                      </SectionFooterLink>

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__enIOs
                        )}
                        destination={"/pages/refund-return-policy" as const}
                      >
                        {"Refunds & Returns"}
                      </SectionFooterLink>

                      <SectionFooterLink
                        className={classNames(
                          "__wab_instance",
                          sty.sectionFooterLink__sV3Qq
                        )}
                        destination={"/pages/shipping-policy" as const}
                      >
                        {"Shipping"}
                      </SectionFooterLink>
                    </p.Stack>
                  </div>
                </div>
              </p.Stack>
            ) : null}

            {true ? (
              <div
                data-plasmic-name={"promoNewsletter"}
                data-plasmic-override={overrides.promoNewsletter}
                className={classNames(projectcss.all, sty.promoNewsletter, {
                  [sty.promoNewsletterminimal]: hasVariant(
                    variants,
                    "minimal",
                    "minimal"
                  )
                })}
              >
                {(
                  hasVariant(variants, "minimal", "minimal") &&
                  hasVariant(globalVariants, "screen", "tabletLandscape")
                    ? true
                    : hasVariant(globalVariants, "screen", "desktop")
                    ? true
                    : hasVariant(globalVariants, "screen", "tabletLandscape")
                    ? true
                    : true
                ) ? (
                  <div
                    data-plasmic-name={"promo"}
                    data-plasmic-override={overrides.promo}
                    className={classNames(projectcss.all, sty.promo, {
                      [sty.promominimal]: hasVariant(
                        variants,
                        "minimal",
                        "minimal"
                      )
                    })}
                  >
                    <SectionFooterPromo
                      className={classNames(
                        "__wab_instance",
                        sty.sectionFooterPromo___7S0Yo,
                        {
                          [sty.sectionFooterPromominimal___7S0YOcaz7H]:
                            hasVariant(variants, "minimal", "minimal")
                        }
                      )}
                    />
                  </div>
                ) : null}

                <SectionFooterNewsletter
                  data-plasmic-name={"sectionFooterNewsletter"}
                  data-plasmic-override={overrides.sectionFooterNewsletter}
                  className={classNames(
                    "__wab_instance",
                    sty.sectionFooterNewsletter,
                    {
                      [sty.sectionFooterNewsletterminimal]: hasVariant(
                        variants,
                        "minimal",
                        "minimal"
                      )
                    }
                  )}
                />
              </div>
            ) : null}

            {(
              hasVariant(globalVariants, "screen", "tabletLandscape")
                ? true
                : hasVariant(globalVariants, "screen", "tabletPortrait")
                ? true
                : true
            ) ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"socialLinks2"}
                data-plasmic-override={overrides.socialLinks2}
                hasGap={true}
                className={classNames(projectcss.all, sty.socialLinks2)}
              >
                {true ? (
                  <SectionFooterSocial
                    className={classNames(
                      "__wab_instance",
                      sty.sectionFooterSocial__qQShU
                    )}
                  />
                ) : null}
              </p.Stack>
            ) : null}

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___3DVdt, {
                [sty.freeBoxminimal___3DVdTcaz7H]: hasVariant(
                  variants,
                  "minimal",
                  "minimal"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lAyEw
                )}
              >
                {"© 2022 Sips by. All rights reserved."}
              </div>

              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__joYIq)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "tabletPortrait")
                      ? true
                      : true
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r0E8R
                      )}
                    >
                      {"•"}
                    </div>
                  ) : null}

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__lzvW1
                    )}
                    component={Link}
                    href={"/pages/terms" as const}
                    platform={"nextjs"}
                  >
                    {"Terms of Use"}
                  </p.PlasmicLink>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sItd
                    )}
                  >
                    {"•"}
                  </div>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__qVD
                    )}
                    component={Link}
                    href={"/pages/privacy-policy" as const}
                    platform={"nextjs"}
                  >
                    {"Privacy Policy"}
                  </p.PlasmicLink>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mbshy
                    )}
                  >
                    {"•"}
                  </div>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__oe8Z3
                    )}
                    component={Link}
                    href={"/pages/accessibility" as const}
                    platform={"nextjs"}
                  >
                    {"Accessibility"}
                  </p.PlasmicLink>
                </p.Stack>
              ) : null}
            </p.Stack>
          </p.Stack>
        ) : null}
      </PageRow>
    </footer>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "pageRow",
    "blogNav",
    "blog",
    "nav",
    "badge",
    "promoNewsletter",
    "promo",
    "sectionFooterNewsletter",
    "socialLinks2"
  ],
  pageRow: [
    "pageRow",
    "blogNav",
    "blog",
    "nav",
    "badge",
    "promoNewsletter",
    "promo",
    "sectionFooterNewsletter",
    "socialLinks2"
  ],
  blogNav: ["blogNav", "blog", "nav", "badge"],
  blog: ["blog"],
  nav: ["nav", "badge"],
  badge: ["badge"],
  promoNewsletter: ["promoNewsletter", "promo", "sectionFooterNewsletter"],
  promo: ["promo"],
  sectionFooterNewsletter: ["sectionFooterNewsletter"],
  socialLinks2: ["socialLinks2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "footer";
  pageRow: typeof PageRow;
  blogNav: "div";
  blog: "div";
  nav: "div";
  badge: typeof Badge;
  promoNewsletter: "div";
  promo: "div";
  sectionFooterNewsletter: typeof SectionFooterNewsletter;
  socialLinks2: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSectionFooter__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSectionFooter__VariantsArgs;
    args?: PlasmicSectionFooter__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicSectionFooter__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicSectionFooter__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicSectionFooter__ArgProps,
          internalVariantPropNames: PlasmicSectionFooter__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicSectionFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSectionFooter";
  } else {
    func.displayName = `PlasmicSectionFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicSectionFooter = Object.assign(
  // Top-level PlasmicSectionFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    pageRow: makeNodeComponent("pageRow"),
    blogNav: makeNodeComponent("blogNav"),
    blog: makeNodeComponent("blog"),
    nav: makeNodeComponent("nav"),
    badge: makeNodeComponent("badge"),
    promoNewsletter: makeNodeComponent("promoNewsletter"),
    promo: makeNodeComponent("promo"),
    sectionFooterNewsletter: makeNodeComponent("sectionFooterNewsletter"),
    socialLinks2: makeNodeComponent("socialLinks2"),

    // Metadata about props expected for PlasmicSectionFooter
    internalVariantProps: PlasmicSectionFooter__VariantProps,
    internalArgProps: PlasmicSectionFooter__ArgProps
  }
);

export default PlasmicSectionFooter;
/* prettier-ignore-end */
