// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: s9FtU1QqNRpfuTCYMk46sz
// Component: UeHhw1A6Z3Hvc-
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SectionMobileMenuSubmenuLink from "../../SectionMobileMenuSubmenuLink"; // plasmic-import: J_WPXwaGlAAlQs/component
import SectionMobileMenuLink from "../../SectionMobileMenuLink"; // plasmic-import: H6eYTN0w5gwLI0/component
import { Accordian } from "../../../../components/accordian"; // plasmic-import: cCgo9xBVwdcOdS/codeComponent

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_sips_by_design_system_css from "../sips_by_design_system/plasmic_sips_by_design_system.module.css"; // plasmic-import: mrgn3VC2r6s7VB3wKPe7xp/projectcss
import projectcss from "./plasmic_copy_of_sips_by_website.module.css"; // plasmic-import: s9FtU1QqNRpfuTCYMk46sz/projectcss
import sty from "./PlasmicNavMobileMenuKaryAccordian.module.css"; // plasmic-import: UeHhw1A6Z3Hvc-/css

export type PlasmicNavMobileMenuKaryAccordian__VariantMembers = {};

export type PlasmicNavMobileMenuKaryAccordian__VariantsArgs = {};
type VariantPropType = keyof PlasmicNavMobileMenuKaryAccordian__VariantsArgs;
export const PlasmicNavMobileMenuKaryAccordian__VariantProps =
  new Array<VariantPropType>();

export type PlasmicNavMobileMenuKaryAccordian__ArgsType = {};
type ArgPropType = keyof PlasmicNavMobileMenuKaryAccordian__ArgsType;
export const PlasmicNavMobileMenuKaryAccordian__ArgProps =
  new Array<ArgPropType>();

export type PlasmicNavMobileMenuKaryAccordian__OverridesType = {
  root?: p.Flex<"div">;
  img?: p.Flex<typeof p.PlasmicImg>;
  accordian?: p.Flex<typeof Accordian>;
};

export interface DefaultNavMobileMenuKaryAccordianProps {}

function PlasmicNavMobileMenuKaryAccordian__RenderFunc(props: {
  variants: PlasmicNavMobileMenuKaryAccordian__VariantsArgs;
  args: PlasmicNavMobileMenuKaryAccordian__ArgsType;
  overrides: PlasmicNavMobileMenuKaryAccordian__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_sips_by_design_system_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__tddcH)}>
            <p.PlasmicImg
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_sips_by_website/images/image13.png",
                fullWidth: 590,
                fullHeight: 246,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__mWbRt)}>
            <SectionMobileMenuSubmenuLink
              className={classNames(
                "__wab_instance",
                sty.sectionMobileMenuSubmenuLink___7Fik
              )}
              destination={"/collections" as const}
              submenuLinkSubmenuHandle={"submenu-link-tea-shop" as const}
            >
              {"Tea Shop"}
            </SectionMobileMenuSubmenuLink>

            <SectionMobileMenuSubmenuLink
              className={classNames(
                "__wab_instance",
                sty.sectionMobileMenuSubmenuLink___98P5F
              )}
              destination={"/pages/blog" as const}
              submenuLinkSubmenuHandle={"submenu-link-tea-stories" as const}
            >
              {"Tea Stories"}
            </SectionMobileMenuSubmenuLink>

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__zy1Al,
                  "sb-logged-out-only" as const
                )}
              >
                <SectionMobileMenuLink
                  className={classNames(
                    "__wab_instance",
                    sty.sectionMobileMenuLink__zF90D
                  )}
                  description={" "}
                  destination={"/account/register" as const}
                >
                  {"Get Your Box"}
                </SectionMobileMenuLink>
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__stfTv,
                  "sb-logged-out-only" as const
                )}
              >
                <SectionMobileMenuLink
                  className={classNames(
                    "__wab_instance",
                    sty.sectionMobileMenuLink__h7Zdo
                  )}
                  description={" "}
                  destination={"https://m.sipsby.com/p/gift" as const}
                >
                  {"Give a Gift"}
                </SectionMobileMenuLink>
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__a8Otw,
                  "sb-logged-out-only" as const
                )}
              >
                <SectionMobileMenuLink
                  className={classNames(
                    "__wab_instance",
                    sty.sectionMobileMenuLink__zjnCl
                  )}
                  description={" "}
                  destination={"/account/login" as const}
                >
                  {"Log In"}
                </SectionMobileMenuLink>
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__fj3Km,
                  "sb-logged-in-only" as const
                )}
              >
                <SectionMobileMenuLink
                  className={classNames(
                    "__wab_instance",
                    sty.sectionMobileMenuLink__ix04O
                  )}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__m0SdH
                      )}
                    >
                      {" "}
                    </div>
                  }
                  destination={"/account" as const}
                >
                  {"My Sips"}
                </SectionMobileMenuLink>
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__piWIo,
                  "sb-logged-in-only" as const
                )}
              >
                <SectionMobileMenuLink
                  className={classNames(
                    "__wab_instance",
                    sty.sectionMobileMenuLink___0YhnL
                  )}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___25Y4P
                      )}
                    >
                      {" "}
                    </div>
                  }
                  destination={"/pages/points" as const}
                >
                  {"Points"}
                </SectionMobileMenuLink>
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox___3Gmeu,
                  "sb-logged-in-only" as const
                )}
              >
                <SectionMobileMenuLink
                  className={classNames(
                    "__wab_instance",
                    sty.sectionMobileMenuLink__mmE0Z
                  )}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__re8Qv
                      )}
                    >
                      {" "}
                    </div>
                  }
                  destination={"/pages/settings" as const}
                >
                  {"Settings"}
                </SectionMobileMenuLink>
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__fit7N,
                  "sb-logged-in-only" as const
                )}
              >
                <Accordian
                  data-plasmic-name={"accordian"}
                  data-plasmic-override={overrides.accordian}
                  arrowRotationOnOpen={90 as const}
                  arrowSide={"farright" as const}
                  className={classNames("__wab_instance", sty.accordian)}
                  content={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9WoAg
                        )}
                      >
                        {"Tea Shop"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wlC54
                        )}
                      >
                        {"Tea Shop"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___85Wma
                        )}
                      >
                        {"Tea Shop"}
                      </div>
                    </React.Fragment>
                  }
                  defaultOpen={true}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cquVg
                      )}
                    >
                      {"Settings"}
                    </div>
                  }
                  titleSide={"left" as const}
                />
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "img", "accordian"],
  img: ["img"],
  accordian: ["accordian"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  img: typeof p.PlasmicImg;
  accordian: typeof Accordian;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNavMobileMenuKaryAccordian__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNavMobileMenuKaryAccordian__VariantsArgs;
    args?: PlasmicNavMobileMenuKaryAccordian__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicNavMobileMenuKaryAccordian__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicNavMobileMenuKaryAccordian__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicNavMobileMenuKaryAccordian__ArgProps,
          internalVariantPropNames:
            PlasmicNavMobileMenuKaryAccordian__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicNavMobileMenuKaryAccordian__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNavMobileMenuKaryAccordian";
  } else {
    func.displayName = `PlasmicNavMobileMenuKaryAccordian.${nodeName}`;
  }
  return func;
}

export const PlasmicNavMobileMenuKaryAccordian = Object.assign(
  // Top-level PlasmicNavMobileMenuKaryAccordian renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),
    accordian: makeNodeComponent("accordian"),

    // Metadata about props expected for PlasmicNavMobileMenuKaryAccordian
    internalVariantProps: PlasmicNavMobileMenuKaryAccordian__VariantProps,
    internalArgProps: PlasmicNavMobileMenuKaryAccordian__ArgProps
  }
);

export default PlasmicNavMobileMenuKaryAccordian;
/* prettier-ignore-end */
