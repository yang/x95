// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: s9FtU1QqNRpfuTCYMk46sz
// Component: B6kVUg18g3HDsq
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SectionMobileMenuLink from "../../SectionMobileMenuLink"; // plasmic-import: H6eYTN0w5gwLI0/component
import SectionMobileMenuSubmenuLink from "../../SectionMobileMenuSubmenuLink"; // plasmic-import: J_WPXwaGlAAlQs/component

import { useScreenVariants as useScreenVariants_6PiZsruRybCC } from "../sips_by_design_system/PlasmicGlobalVariant__Screen"; // plasmic-import: 6piZsruRybC-C/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_sips_by_design_system_css from "../sips_by_design_system/plasmic_sips_by_design_system.module.css"; // plasmic-import: mrgn3VC2r6s7VB3wKPe7xp/projectcss
import projectcss from "./plasmic_copy_of_sips_by_website.module.css"; // plasmic-import: s9FtU1QqNRpfuTCYMk46sz/projectcss
import sty from "./PlasmicNavMobileMenuLn.module.css"; // plasmic-import: B6kVUg18g3HDsq/css

export type PlasmicNavMobileMenuLn__VariantMembers = {};

export type PlasmicNavMobileMenuLn__VariantsArgs = {};
type VariantPropType = keyof PlasmicNavMobileMenuLn__VariantsArgs;
export const PlasmicNavMobileMenuLn__VariantProps =
  new Array<VariantPropType>();

export type PlasmicNavMobileMenuLn__ArgsType = {};
type ArgPropType = keyof PlasmicNavMobileMenuLn__ArgsType;
export const PlasmicNavMobileMenuLn__ArgProps = new Array<ArgPropType>();

export type PlasmicNavMobileMenuLn__OverridesType = {
  root?: p.Flex<"div">;
  img?: p.Flex<typeof p.PlasmicImg>;
  accountregister?: p.Flex<"a"> & Partial<LinkProps>;
  httpsmsipsbycompgift?: p.Flex<"a"> & Partial<LinkProps>;
  columns?: p.Flex<"div">;
  accountlogin?: p.Flex<"a"> & Partial<LinkProps>;
  pagesabout?: p.Flex<"div">;
  pagesmygift?: p.Flex<"div">;
  httpssipsbyzendeskcomhcenUs?: p.Flex<"div">;
  pagesrefundReturnPolicy?: p.Flex<"div">;
  pagesshippingPolicy?: p.Flex<"div">;
};

export interface DefaultNavMobileMenuLnProps {}

function PlasmicNavMobileMenuLn__RenderFunc(props: {
  variants: PlasmicNavMobileMenuLn__VariantsArgs;
  args: PlasmicNavMobileMenuLn__ArgsType;
  overrides: PlasmicNavMobileMenuLn__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_6PiZsruRybCC()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_sips_by_design_system_css.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox___0RC9O)}>
              <p.PlasmicImg
                data-plasmic-name={"img"}
                data-plasmic-override={overrides.img}
                alt={""}
                className={classNames(sty.img)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/copy_of_sips_by_website/images/image13.png",
                  fullWidth: 590,
                  fullHeight: 246,
                  aspectRatio: undefined
                }}
              />
            </div>
          ) : null}

          <div className={classNames(projectcss.all, sty.freeBox__smNr)}>
            <SectionMobileMenuLink
              className={classNames(
                "__wab_instance",
                sty.sectionMobileMenuLink___6Rz0B
              )}
              description={" "}
              destination={
                "https://www.sipsby.com/account/register?ckey=default-register-join-now" as const
              }
            >
              {"Join Now"}
            </SectionMobileMenuLink>

            {true ? (
              <SectionMobileMenuSubmenuLink
                className={classNames(
                  "__wab_instance",
                  sty.sectionMobileMenuSubmenuLink__sZn6B
                )}
                destination={"/collections/tea" as const}
                submenuLinkSubmenuHandle={"submenu-link-sb-shop-tea" as const}
              >
                {"Tea Shop"}
              </SectionMobileMenuSubmenuLink>
            ) : null}

            {true ? (
              <SectionMobileMenuSubmenuLink
                className={classNames(
                  "__wab_instance",
                  sty.sectionMobileMenuSubmenuLink__yuxKl
                )}
                destination={"/collections/tea-accessories-all" as const}
                submenuLinkSubmenuHandle={
                  "submenu-link-sb-shop-teaware" as const
                }
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uDYts
                  )}
                >
                  {"Teaware"}
                </div>
              </SectionMobileMenuSubmenuLink>
            ) : null}

            <SectionMobileMenuSubmenuLink
              className={classNames(
                "__wab_instance",
                sty.sectionMobileMenuSubmenuLink__e8HOk
              )}
              destination={"/collections/tea-gifts" as const}
              submenuLinkSubmenuHandle={"submenu-link-sb-shop-gifts" as const}
            >
              {"Tea Gifts"}
            </SectionMobileMenuSubmenuLink>

            <SectionMobileMenuLink
              className={classNames(
                "__wab_instance",
                sty.sectionMobileMenuLink__snyMf
              )}
              description={" "}
              destination={"/collections/iced-tea-favorites/" as const}
            >
              {"Iced Tea"}
            </SectionMobileMenuLink>

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__umTt3)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___9NUwh)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2Y7L
                    )}
                  >
                    {"We're the #1 Rated Tea Club"}
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__x1ADw)}
                >
                  <p.PlasmicLink
                    data-plasmic-name={"accountregister"}
                    data-plasmic-override={overrides.accountregister}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.accountregister
                    )}
                    component={Link}
                    href={"/products/personalized-tea-discovery-box" as const}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aLqS8)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__owWu
                        )}
                      >
                        {"Join Now"}
                      </div>
                    </div>
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    data-plasmic-name={"httpsmsipsbycompgift"}
                    data-plasmic-override={overrides.httpsmsipsbycompgift}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.httpsmsipsbycompgift
                    )}
                    component={Link}
                    href={"https://m.sipsby.com/p/gift" as const}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cw11N)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f2Jdg
                        )}
                      >
                        {"Give a Gift"}
                      </div>
                    </div>
                  </p.PlasmicLink>
                </p.Stack>
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__c9Nwj,
                  "sb-logged-out-only" as const
                )}
              >
                {true ? (
                  <SectionMobileMenuLink
                    className={classNames(
                      "__wab_instance",
                      sty.sectionMobileMenuLink__vPaEn
                    )}
                    description={" "}
                    destination={"https://m.sipsby.com/p/gift" as const}
                  >
                    {"Give a Gift"}
                  </SectionMobileMenuLink>
                ) : null}
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__lKj4,
                  "sb-logged-out-only" as const
                )}
              >
                {true ? (
                  <SectionMobileMenuLink
                    className={classNames(
                      "__wab_instance",
                      sty.sectionMobileMenuLink__lKhpi
                    )}
                    description={" "}
                    destination={"/account/login" as const}
                  >
                    {"Log In"}
                  </SectionMobileMenuLink>
                ) : null}
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__fkSkh,
                  "sb-logged-in-only" as const
                )}
              >
                {true ? (
                  <SectionMobileMenuLink
                    className={classNames(
                      "__wab_instance",
                      sty.sectionMobileMenuLink__mNsio
                    )}
                    description={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fsay3
                        )}
                      >
                        {" "}
                      </div>
                    }
                    destination={"/account" as const}
                  >
                    {"My Sips"}
                  </SectionMobileMenuLink>
                ) : null}
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__jhYd,
                  "sb-logged-in-only" as const
                )}
              >
                {true ? (
                  <SectionMobileMenuLink
                    className={classNames(
                      "__wab_instance",
                      sty.sectionMobileMenuLink__dgsig
                    )}
                    description={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rmQkj
                        )}
                      >
                        {" "}
                      </div>
                    }
                    destination={"/pages/points" as const}
                  >
                    {"Points"}
                  </SectionMobileMenuLink>
                ) : null}
              </div>
            ) : null}

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox__jpNKq,
                  "sb-logged-in-only" as const
                )}
              >
                {true ? (
                  <SectionMobileMenuLink
                    className={classNames(
                      "__wab_instance",
                      sty.sectionMobileMenuLink__clJ7Y
                    )}
                    description={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ur22
                        )}
                      >
                        {" "}
                      </div>
                    }
                    destination={"/pages/settings" as const}
                  >
                    {"Settings"}
                  </SectionMobileMenuLink>
                ) : null}
              </div>
            ) : null}
          </div>

          <div
            data-plasmic-name={"columns"}
            data-plasmic-override={overrides.columns}
            className={classNames(projectcss.all, sty.columns)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__xh8Vl)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__ltvBh)}>
                <p.PlasmicLink
                  data-plasmic-name={"accountlogin"}
                  data-plasmic-override={overrides.accountlogin}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.accountlogin
                  )}
                  component={Link}
                  href={"/account/login" as const}
                  platform={"nextjs"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wxb6O
                    )}
                  >
                    {"LOG IN"}
                  </div>
                </p.PlasmicLink>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__y8MWf)}>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__ezJrl
                  )}
                  component={Link}
                  href={"/pages/about" as const}
                  platform={"nextjs"}
                >
                  <div
                    data-plasmic-name={"pagesabout"}
                    data-plasmic-override={overrides.pagesabout}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.pagesabout
                    )}
                  >
                    {"ABOUT"}
                  </div>
                </p.PlasmicLink>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__ouUr7)}>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__nf2Ll
                  )}
                  component={Link}
                  href={"/pages/mygift" as const}
                  platform={"nextjs"}
                >
                  <div
                    data-plasmic-name={"pagesmygift"}
                    data-plasmic-override={overrides.pagesmygift}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.pagesmygift
                    )}
                  >
                    {"REDEEM A GIFT CARD"}
                  </div>
                </p.PlasmicLink>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__qz1Ly)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__o9HRg)}>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__zJaNd
                  )}
                  component={Link}
                  href={"https://sipsby.zendesk.com/hc/en-us" as const}
                  platform={"nextjs"}
                >
                  <div
                    data-plasmic-name={"httpssipsbyzendeskcomhcenUs"}
                    data-plasmic-override={
                      overrides.httpssipsbyzendeskcomhcenUs
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.httpssipsbyzendeskcomhcenUs
                    )}
                  >
                    {"FAQ"}
                  </div>
                </p.PlasmicLink>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__coIbH)}>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__gxezt
                  )}
                  component={Link}
                  href={"/pages/refund-return-policy" as const}
                  platform={"nextjs"}
                >
                  <div
                    data-plasmic-name={"pagesrefundReturnPolicy"}
                    data-plasmic-override={overrides.pagesrefundReturnPolicy}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.pagesrefundReturnPolicy
                    )}
                  >
                    {"REFUNDS + RETURNS"}
                  </div>
                </p.PlasmicLink>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__vlvuG)}>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___3Qewg
                  )}
                  component={Link}
                  href={"/pages/shipping-policy" as const}
                  platform={"nextjs"}
                >
                  <div
                    data-plasmic-name={"pagesshippingPolicy"}
                    data-plasmic-override={overrides.pagesshippingPolicy}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.pagesshippingPolicy
                    )}
                  >
                    {"SHIPPING"}
                  </div>
                </p.PlasmicLink>
              </div>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "img",
    "accountregister",
    "httpsmsipsbycompgift",
    "columns",
    "accountlogin",
    "pagesabout",
    "pagesmygift",
    "httpssipsbyzendeskcomhcenUs",
    "pagesrefundReturnPolicy",
    "pagesshippingPolicy"
  ],
  img: ["img"],
  accountregister: ["accountregister"],
  httpsmsipsbycompgift: ["httpsmsipsbycompgift"],
  columns: [
    "columns",
    "accountlogin",
    "pagesabout",
    "pagesmygift",
    "httpssipsbyzendeskcomhcenUs",
    "pagesrefundReturnPolicy",
    "pagesshippingPolicy"
  ],
  accountlogin: ["accountlogin"],
  pagesabout: ["pagesabout"],
  pagesmygift: ["pagesmygift"],
  httpssipsbyzendeskcomhcenUs: ["httpssipsbyzendeskcomhcenUs"],
  pagesrefundReturnPolicy: ["pagesrefundReturnPolicy"],
  pagesshippingPolicy: ["pagesshippingPolicy"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  img: typeof p.PlasmicImg;
  accountregister: "a";
  httpsmsipsbycompgift: "a";
  columns: "div";
  accountlogin: "a";
  pagesabout: "div";
  pagesmygift: "div";
  httpssipsbyzendeskcomhcenUs: "div";
  pagesrefundReturnPolicy: "div";
  pagesshippingPolicy: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNavMobileMenuLn__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNavMobileMenuLn__VariantsArgs;
    args?: PlasmicNavMobileMenuLn__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicNavMobileMenuLn__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicNavMobileMenuLn__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicNavMobileMenuLn__ArgProps,
          internalVariantPropNames: PlasmicNavMobileMenuLn__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicNavMobileMenuLn__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNavMobileMenuLn";
  } else {
    func.displayName = `PlasmicNavMobileMenuLn.${nodeName}`;
  }
  return func;
}

export const PlasmicNavMobileMenuLn = Object.assign(
  // Top-level PlasmicNavMobileMenuLn renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),
    accountregister: makeNodeComponent("accountregister"),
    httpsmsipsbycompgift: makeNodeComponent("httpsmsipsbycompgift"),
    columns: makeNodeComponent("columns"),
    accountlogin: makeNodeComponent("accountlogin"),
    pagesabout: makeNodeComponent("pagesabout"),
    pagesmygift: makeNodeComponent("pagesmygift"),
    httpssipsbyzendeskcomhcenUs: makeNodeComponent(
      "httpssipsbyzendeskcomhcenUs"
    ),
    pagesrefundReturnPolicy: makeNodeComponent("pagesrefundReturnPolicy"),
    pagesshippingPolicy: makeNodeComponent("pagesshippingPolicy"),

    // Metadata about props expected for PlasmicNavMobileMenuLn
    internalVariantProps: PlasmicNavMobileMenuLn__VariantProps,
    internalArgProps: PlasmicNavMobileMenuLn__ArgProps
  }
);

export default PlasmicNavMobileMenuLn;
/* prettier-ignore-end */
